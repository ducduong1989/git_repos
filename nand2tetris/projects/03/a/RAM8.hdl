// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address, a=res0Loaded, b=res1Loaded, c=res2Loaded, d=res3Loaded, e=res4Loaded, f=res5Loaded, g=res6Loaded, h=res7Loaded);
	//Save state of all registers first
	Register(in[0..15]=in, load=res0Loaded, out=register0);
	Register(in[0..15]=in, load=res1Loaded, out=register1);	
	Register(in[0..15]=in, load=res2Loaded, out=register2);
	Register(in[0..15]=in, load=res3Loaded, out=register3);
	Register(in[0..15]=in, load=res4Loaded, out=register4);
	Register(in[0..15]=in, load=res5Loaded, out=register5);
	Register(in[0..15]=in, load=res6Loaded, out=register6);
	Register(in[0..15]=in, load=res7Loaded, out=register7);
	//output
	Mux8Way16(a=register0, b=register1, c=register2, d=register3, e=register4, f=register5, g=register6, h=register7, sel=address, out=out);
}
